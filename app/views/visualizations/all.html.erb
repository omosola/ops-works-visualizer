<div class="navbar navbar-inverse navbar-fixed-top" id="navbar" role="navigation">
	<div class="container">
		<div class="navbar-header">
			<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
				<span class="sr-only">Toggle navigation</span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
			</button>
			<a class="navbar-brand" href="#">OpsWorks Visualization</a>
		</div>
		<div class="collapse navbar-collapse">
			<ul class="nav navbar-nav">
				<li class="active"><a href="#">Home</a></li>
				<li><a href="#about">About</a></li>
				<li><a href="#about">Stacks (<%= @stacks.count %>)</a></li>
				<!--<li><a href="#contact">Contact</a></li>-->
			</ul>
		</div><!--/.nav-collapse -->
	</div>
</div>

<div class="col-md-2" id="sidebar">
	<div class="container info-box col-md-12">

	</div>
</div>

<div class="col-md-10" id="main-body">
	<div class="starter-template">
		<!--<p class="lead">Use this document as a way to quickly start any new project.<br> All you get is this text and a mostly barebones HTML document.</p>-->
		<% @stacks.each_with_index do |stack, i| %>
				<!-- Prints out a row every two stacks TODO: Should be solved differently! -->
					<%= render partial: "stack", locals: { stack: stack } %>
				
		<% end %>
	</div>

</div><!-- /.container -->

<script>
	$('.instance').mouseenter( function(e) {
		// get the instance json from within the hidden info div
		// TODO: Think of a better way to do this.

		// NEXT STEP: Only have this happen for the specific element which was selected. not all of them
		var content = $(this).find('.info').html();
		// hide, change content, show
		/*$('#info-hover-box').hide();
		$('#info-hover-box').css({
			top: e.pageY,
			left: e.pageX
		});*/
		$('.info-box').html(parse_json_info_for_display(content));
		$('.info-box').show();

	});

	$('.instance').mouseout( function(e) {
		$('.info-hover-box').hide();
	});

	var parse_json_info_for_display = function(json_string) {
		// parse the json to generate a cleaner looking HTML
		// chunk
		var obj = JSON.parse(json_string);

		var html_string = "";

		for (var property in obj) {
			html_string = html_string + " " + property + ": " + obj[property] + "<br /><br />";
		}

		return html_string;
	};

	var pull_out_needed_json = function(json_string) {
		// Parse: ID, Host
		var obj = JSON.parse(json_string);
		
	};

	var parse_elb_info_for_display = function() {

	};

</script>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
<!--    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
	<script src="../../dist/js/bootstrap.min.js"></script>-->
